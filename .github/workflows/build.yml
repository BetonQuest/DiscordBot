name: Build
on: [ push, pull_request ]

jobs:
  prepare:
    name: Prepare Build Variables
    runs-on: ubuntu-latest

    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
      VERSION_TYPE: ${{ steps.version.outputs.VERSION_TYPE }}
      VERSION_MAVEN: ${{ steps.version.outputs.VERSION_MAVEN }}
      VERSION_IS_NEW: ${{ steps.version.outputs.VERSION_IS_NEW }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: BetonQuest/Workflows/.github/actions/version@main
        id: version
        with:
          ROOT_REPOSITORY: BetonQuest/BetonQuestPlus
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    needs: [ prepare ]
    runs-on: ubuntu-latest

    env:
      VERSION: ${{ needs.prepare.outputs.VERSION }}
      VERSION_TYPE: ${{ needs.prepare.outputs.VERSION_TYPE }}
      VERSION_MAVEN: ${{ needs.prepare.outputs.VERSION_MAVEN }}
      VERSION_IS_NEW: ${{ needs.prepare.outputs.VERSION_IS_NEW }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - uses: BetonQuest/Workflows/.github/actions/setup-java-maven@main
        with:
          JAVA_CACHE: 'maven'
          MAVEN_TARGET_DIR: 'target/artifacts'
      - uses: BetonQuest/Workflows/.github/actions/replace-code-variables@main
        with:
          VERSION: ${{ env.VERSION }}
          VERSION_TYPE: ${{ env.VERSION_TYPE }}
          VERSION_NAMESPACE: "Discordbot"
      - name: Build with Maven. Phase 'verify'
        shell: bash --noprofile --norc -euo pipefail {0}
        run: |
          if [ $VERSION_TYPE == 'release' ]; then CHANGELIST=-Dchangelist=; fi
          ./mvnw ${CHANGELIST-} -B verify
          git diff > target/artifacts/changes.patch
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: BetonQuestPlus-Artifacts
          path: |
            target/artifacts/DiscordBot.jar
            target/artifacts/discordbot-*-*.jar

  deploy:
    name: Deploy Code
    if: "needs.prepare.outputs.VERSION_TYPE == 'release' || needs.prepare.outputs.VERSION_TYPE == 'development' && needs.prepare.outputs.VERSION_IS_NEW == 'true'"
    needs: [ prepare, build ]
    runs-on: ubuntu-latest

    env:
      VERSION: ${{ needs.prepare.outputs.VERSION }}
      VERSION_TYPE: ${{ needs.prepare.outputs.VERSION_TYPE }}
      VERSION_MAVEN: ${{ needs.prepare.outputs.VERSION_MAVEN }}
      VERSION_IS_NEW: ${{ needs.prepare.outputs.VERSION_IS_NEW }}

    steps:
      - name: Upload to Server
        if: "github.repository == 'BetonQuest/DiscordBot' && github.ref == 'refs/heads/master' && github.event_name == 'push'"
        run: |
          echo Not supported yet!
